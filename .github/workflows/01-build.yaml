name: 01 Basic Docker Build
# simplest workflow possible

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    steps:
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to a registry
          tags: ${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

        # for simple tests (npm test, etc.) just run a local image in docker
      - name: Unit Testing in Docker
        run: |
          docker run --rm ${{ github.run_id }} echo "run test commands here"
      
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: victorsteinborn/httpenv
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=branch
            type=semver,pattern={{version}}
      
      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to a registry
          tags: ${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          
      - name: Run Trivy for all CVEs (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 0
          format: table 
          
      - name: Run Trivy for HIGH,CRITICAL CVEs and report (blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 1
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          
